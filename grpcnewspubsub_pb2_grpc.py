# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpcnewspubsub_pb2 as grpcnewspubsub__pb2


class MsgServUnarySubStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServerResponse = channel.unary_unary(
                '/grpcNewsPubSub.MsgServUnarySub/GetServerResponse',
                request_serializer=grpcnewspubsub__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=grpcnewspubsub__pb2.NewsArticle.FromString,
                )


class MsgServUnarySubServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetServerResponse(self, request, context):
        """Obtains the MessageResponse at a given position.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServUnarySubServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetServerResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerResponse,
                    request_deserializer=grpcnewspubsub__pb2.SubscribeRequest.FromString,
                    response_serializer=grpcnewspubsub__pb2.NewsArticle.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcNewsPubSub.MsgServUnarySub', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MsgServUnarySub(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetServerResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcNewsPubSub.MsgServUnarySub/GetServerResponse',
            grpcnewspubsub__pb2.SubscribeRequest.SerializeToString,
            grpcnewspubsub__pb2.NewsArticle.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MsgServPubStreamSubUnaryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServerResponse = channel.unary_stream(
                '/grpcNewsPubSub.MsgServPubStreamSubUnary/GetServerResponse',
                request_serializer=grpcnewspubsub__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=grpcnewspubsub__pb2.NewsArticle.FromString,
                )


class MsgServPubStreamSubUnaryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetServerResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServPubStreamSubUnaryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetServerResponse': grpc.unary_stream_rpc_method_handler(
                    servicer.GetServerResponse,
                    request_deserializer=grpcnewspubsub__pb2.SubscribeRequest.FromString,
                    response_serializer=grpcnewspubsub__pb2.NewsArticle.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcNewsPubSub.MsgServPubStreamSubUnary', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MsgServPubStreamSubUnary(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetServerResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/grpcNewsPubSub.MsgServPubStreamSubUnary/GetServerResponse',
            grpcnewspubsub__pb2.SubscribeRequest.SerializeToString,
            grpcnewspubsub__pb2.NewsArticle.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
